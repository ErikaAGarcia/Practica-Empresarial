<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>